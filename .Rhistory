setwd("C:\\Users\\hardCode\\Desktop\\dsbda")
setwd("C:/Users/hardCode/Desktop/dsbda")
x=read.csv("churn_Data.csv")
x
library(caret)
x=read.csv("churn_Data.csv")
x=read.csv('churn_Data.csv')
churn<-read.csv("churn_Data.csv")
churn=churn[,-1]
setwd("C:/Users/hardCode/Desktop/dsbda")
churn<-read.csv("churn_Data.csv")
library(readr)
churn_Data <- read_csv("C:/Users/hardCode/Desktop/dsbda/churn_Data.csv")
View(churn_Data)
churn<-read.csv("churn_Data.csv")
View(churn)
churn=churn[,-1]
View(churn)
barplot(table(churn$churn))
barplot(table(churn$Churn.),color="blue")
library("caret")
library("caret")
barplot(table(churn$Churn.),color="blue")
apply(churn,2,function(x)sum(is.na(x)))
trainDataIndex=createDataPartition(churn$Churn.,p=.7,list = F,tim)
churn=read.csv("churn_Data.csv")
churn=churn[,-1]
library("caret")
barplot(table(churn$Churn.),color="blue")
apply(churn,2,function(x)sum(is.na(x)))
trainIndex=createDataPartition(churn$Churn.,p=.7,list = F,times = 1)
trainSet=churn[trainIndex,]
testSet=churn[trainIndex,]
fit=glm(churn,~.,data=trainSet,family = binomial)
summary(fit)
churn=read.csv("churn_Data.csv")
churn=churn[,-1]
library("caret")
barplot(table(churn$Churn.),color="blue")
apply(churn,2,function(x)sum(is.na(x)))
trainIndex=createDataPartition(churn$Churn.,p=.7,list = F,times = 1)
trainSet=churn[trainIndex,]
testSet=churn[trainIndex,]
fit=glm(churn,~.,data=trainSet,family = "binomial")
summary(fit)
trainSet=churn[trainIndex,]
churn=read.csv("churn_Data.csv")
churn=churn[,-1]
library("caret")
barplot(table(churn$Churn.),color="blue")
apply(churn,2,function(x)sum(is.na(x)))
trainIndex=createDataPartition(churn$Churn.,p=.7,list = F,times = 1)
trainSet=churn[trainIndex,]
testSet=churn[trainIndex,]
fit=glm(churn,~.,data=trainSet,family = "binomial")
summary(fit)
churn=read.csv("churn_Data.csv")
churn=churn[,-1]
library("caret")
barplot(table(churn$Churn.),color="blue")
apply(churn,2,function(x)sum(is.na(x)))
trainIndex=createDataPartition(churn$Churn.,p=.7,list = F,times = 1)
trainSet=churn[trainIndex,]
testSet=churn[trainIndex,]
fit=glm(churn,~,data=trainSet,family = "binomial")
summary(fit)
fit=glm(churn, ~ ,data=trainSet,family = "binomial")
